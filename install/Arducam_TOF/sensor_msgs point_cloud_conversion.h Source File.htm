<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>sensor_msgs: point_cloud_conversion.h Source File</title>
<link href="sensor_msgs%20point_cloud_conversion.h%20Source%20File-Dateien/doxygen.css" rel="stylesheet" type="text/css">
<link href="sensor_msgs%20point_cloud_conversion.h%20Source%20File-Dateien/tabs.css" rel="stylesheet" type="text/css">


<link rel="canonical" href="http://docs.ros.org/jade/api/sensor_msgs/html/point__cloud__conversion_8h_source.html">
</head>
<body onload="searchBox.OnSelectItem(0);">
<!-- Generated by Doxygen 1.7.6.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/files.html"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>

<div class="header">
  <div class="headertitle">
<div class="title">point_cloud_conversion.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="http://docs.ros.org/en/jade/api/sensor_msgs/html/point__cloud__conversion_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/*</span>
<a name="l00002"></a>00002 <span class="comment"> * Software License Agreement (BSD License)</span>
<a name="l00003"></a>00003 <span class="comment"> *</span>
<a name="l00004"></a>00004 <span class="comment"> *  Copyright (c) 2010, Willow Garage, Inc.</span>
<a name="l00005"></a>00005 <span class="comment"> *  All rights reserved.</span>
<a name="l00006"></a>00006 <span class="comment"> *</span>
<a name="l00007"></a>00007 <span class="comment"> *  Redistribution and use in source and binary forms, with or without</span>
<a name="l00008"></a>00008 <span class="comment"> *  modification, are permitted provided that the following conditions</span>
<a name="l00009"></a>00009 <span class="comment"> *  are met:</span>
<a name="l00010"></a>00010 <span class="comment"> *</span>
<a name="l00011"></a>00011 <span class="comment"> *   * Redistributions of source code must retain the above copyright</span>
<a name="l00012"></a>00012 <span class="comment"> *     notice, this list of conditions and the following disclaimer.</span>
<a name="l00013"></a>00013 <span class="comment"> *   * Redistributions in binary form must reproduce the above</span>
<a name="l00014"></a>00014 <span class="comment"> *     copyright notice, this list of conditions and the following</span>
<a name="l00015"></a>00015 <span class="comment"> *     disclaimer in the documentation and/or other materials provided</span>
<a name="l00016"></a>00016 <span class="comment"> *     with the distribution.</span>
<a name="l00017"></a>00017 <span class="comment"> *   * Neither the name of Willow Garage, Inc. nor the names of its</span>
<a name="l00018"></a>00018 <span class="comment"> *     contributors may be used to endorse or promote products derived</span>
<a name="l00019"></a>00019 <span class="comment"> *     from this software without specific prior written permission.</span>
<a name="l00020"></a>00020 <span class="comment"> *</span>
<a name="l00021"></a>00021 <span class="comment"> *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span>
<a name="l00022"></a>00022 <span class="comment"> *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span>
<a name="l00023"></a>00023 <span class="comment"> *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS</span>
<a name="l00024"></a>00024 <span class="comment"> *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE</span>
<a name="l00025"></a>00025 <span class="comment"> *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,</span>
<a name="l00026"></a>00026 <span class="comment"> *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,</span>
<a name="l00027"></a>00027 <span class="comment"> *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;</span>
<a name="l00028"></a>00028 <span class="comment"> *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER</span>
<a name="l00029"></a>00029 <span class="comment"> *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT</span>
<a name="l00030"></a>00030 <span class="comment"> *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN</span>
<a name="l00031"></a>00031 <span class="comment"> *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE</span>
<a name="l00032"></a>00032 <span class="comment"> *  POSSIBILITY OF SUCH DAMAGE.</span>
<a name="l00033"></a>00033 <span class="comment"> *</span>
<a name="l00034"></a>00034 <span class="comment"> * $Id$</span>
<a name="l00035"></a>00035 <span class="comment"> *</span>
<a name="l00036"></a>00036 <span class="comment"> */</span>
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="preprocessor">#ifndef SENSOR_MSGS_POINT_CLOUD_CONVERSION_H</span>
<a name="l00039"></a>00039 <span class="preprocessor"></span><span class="preprocessor">#define SENSOR_MSGS_POINT_CLOUD_CONVERSION_H</span>
<a name="l00040"></a>00040 <span class="preprocessor"></span>
<a name="l00041"></a>00041 <span class="preprocessor">#include &lt;sensor_msgs/PointCloud.h&gt;</span>
<a name="l00042"></a>00042 <span class="preprocessor">#include &lt;sensor_msgs/PointCloud2.h&gt;</span>
<a name="l00043"></a>00043 <span class="preprocessor">#include &lt;<a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/point__field__conversion_8h.html">sensor_msgs/point_field_conversion.h</a>&gt;</span>
<a name="l00044"></a>00044 
<a name="l00049"></a>00049 <span class="keyword">namespace </span>sensor_msgs
<a name="l00050"></a>00050 {
<a name="l00052"></a>00052 
<a name="l00056"></a><a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ade469411e985a8bceddfba589ac91f8e">00056</a> <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">int</span> <a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ade469411e985a8bceddfba589ac91f8e" title="Get the index of a specified field (i.e., dimension/channel)">getPointCloud2FieldIndex</a> (<span class="keyword">const</span> sensor_msgs::PointCloud2 &amp;cloud, <span class="keyword">const</span> std::string &amp;field_name)
<a name="l00057"></a>00057 {
<a name="l00058"></a>00058   <span class="comment">// Get the index we need</span>
<a name="l00059"></a>00059   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> = 0; <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> &lt; cloud.fields.size (); ++<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>)
<a name="l00060"></a>00060     <span class="keywordflow">if</span> (cloud.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].name == field_name)
<a name="l00061"></a>00061       <span class="keywordflow">return</span> (<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>);
<a name="l00062"></a>00062   <span class="keywordflow">return</span> (-1);
<a name="l00063"></a>00063 }
<a name="l00064"></a>00064 
<a name="l00066"></a>00066 
<a name="l00070"></a><a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#a4e302e86e3c57ba454daa9f0bced8b21">00070</a> <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#a4e302e86e3c57ba454daa9f0bced8b21" title="Convert a sensor_msgs::PointCloud message to a sensor_msgs::PointCloud2 message.">convertPointCloudToPointCloud2</a> (<span class="keyword">const</span> sensor_msgs::PointCloud &amp;input, sensor_msgs::PointCloud2 &amp;output)
<a name="l00071"></a>00071 {
<a name="l00072"></a>00072   output.header = input.header;
<a name="l00073"></a>00073   output.width  = input.points.size ();
<a name="l00074"></a>00074   output.height = 1;
<a name="l00075"></a>00075   output.fields.resize (3 + input.channels.size ());
<a name="l00076"></a>00076   <span class="comment">// Convert x/y/z to fields</span>
<a name="l00077"></a>00077   output.fields[0].name = <span class="stringliteral">"x"</span>; output.fields[1].name = <span class="stringliteral">"y"</span>; output.fields[2].name = <span class="stringliteral">"z"</span>;
<a name="l00078"></a>00078   <span class="keywordtype">int</span> offset = 0;
<a name="l00079"></a>00079   <span class="comment">// All offsets are *4, as all field data types are float32</span>
<a name="l00080"></a>00080   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> = 0; <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> &lt; output.fields.size (); ++<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>, offset += 4)
<a name="l00081"></a>00081   {
<a name="l00082"></a>00082     output.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset = offset;
<a name="l00083"></a>00083     output.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].datatype = sensor_msgs::PointField::FLOAT32;
<a name="l00084"></a>00084     output.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].count  = 1;
<a name="l00085"></a>00085   }
<a name="l00086"></a>00086   output.point_step = offset;
<a name="l00087"></a>00087   output.row_step   = output.point_step * output.width;
<a name="l00088"></a>00088   <span class="comment">// Convert the remaining of the channels to fields</span>
<a name="l00089"></a>00089   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> = 0; <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> &lt; input.channels.size (); ++<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>)
<a name="l00090"></a>00090     output.fields[3 + <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].name = input.channels[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].name;
<a name="l00091"></a>00091   output.data.resize (input.points.size () * output.point_step);
<a name="l00092"></a>00092   output.is_bigendian = <span class="keyword">false</span>;  <span class="comment">// @todo ?</span>
<a name="l00093"></a>00093   output.is_dense     = <span class="keyword">false</span>;
<a name="l00094"></a>00094 
<a name="l00095"></a>00095   <span class="comment">// Copy the data points</span>
<a name="l00096"></a>00096   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> cp = 0; cp &lt; input.points.size (); ++cp)
<a name="l00097"></a>00097   {
<a name="l00098"></a>00098     memcpy (&amp;output.data[cp * output.point_step + output.fields[0].offset], &amp;input.points[cp].x, sizeof (<span class="keywordtype">float</span>));
<a name="l00099"></a>00099     memcpy (&amp;output.data[cp * output.point_step + output.fields[1].offset], &amp;input.points[cp].y, sizeof (<span class="keywordtype">float</span>));
<a name="l00100"></a>00100     memcpy (&amp;output.data[cp * output.point_step + output.fields[2].offset], &amp;input.points[cp].z, sizeof (<span class="keywordtype">float</span>));
<a name="l00101"></a>00101     <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> = 0; <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> &lt; input.channels.size (); ++<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>)
<a name="l00102"></a>00102     {
<a name="l00103"></a>00103       <span class="keywordflow">if</span> (input.channels[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].values.size() == input.points.size())
<a name="l00104"></a>00104       {
<a name="l00105"></a>00105         memcpy (&amp;output.data[cp * output.point_step + output.fields[3 + <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset], &amp;input.channels[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].values[cp], sizeof (<span class="keywordtype">float</span>));
<a name="l00106"></a>00106       }
<a name="l00107"></a>00107     }
<a name="l00108"></a>00108   }
<a name="l00109"></a>00109   <span class="keywordflow">return</span> (<span class="keyword">true</span>);
<a name="l00110"></a>00110 }
<a name="l00111"></a>00111 
<a name="l00113"></a>00113 
<a name="l00117"></a><a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ab4620a23b181e9fe9d24181e4bc1eb8c">00117</a> <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ab4620a23b181e9fe9d24181e4bc1eb8c" title="Convert a sensor_msgs::PointCloud2 message to a sensor_msgs::PointCloud message.">convertPointCloud2ToPointCloud</a> (<span class="keyword">const</span> sensor_msgs::PointCloud2 &amp;input, sensor_msgs::PointCloud &amp;output)
<a name="l00118"></a>00118 {
<a name="l00119"></a>00119 
<a name="l00120"></a>00120   output.header = input.header;
<a name="l00121"></a>00121   output.points.resize (input.width * input.height);
<a name="l00122"></a>00122   output.channels.resize (input.fields.size () - 3);
<a name="l00123"></a>00123   <span class="comment">// Get the x/y/z field offsets</span>
<a name="l00124"></a>00124   <span class="keywordtype">int</span> x_idx = <a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ade469411e985a8bceddfba589ac91f8e" title="Get the index of a specified field (i.e., dimension/channel)">getPointCloud2FieldIndex</a> (input, <span class="stringliteral">"x"</span>);
<a name="l00125"></a>00125   <span class="keywordtype">int</span> y_idx = <a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ade469411e985a8bceddfba589ac91f8e" title="Get the index of a specified field (i.e., dimension/channel)">getPointCloud2FieldIndex</a> (input, <span class="stringliteral">"y"</span>);
<a name="l00126"></a>00126   <span class="keywordtype">int</span> z_idx = <a class="code" href="http://docs.ros.org/en/jade/api/sensor_msgs/html/namespacesensor__msgs.html#ade469411e985a8bceddfba589ac91f8e" title="Get the index of a specified field (i.e., dimension/channel)">getPointCloud2FieldIndex</a> (input, <span class="stringliteral">"z"</span>);
<a name="l00127"></a>00127   <span class="keywordflow">if</span> (x_idx == -1 || y_idx == -1 || z_idx == -1)
<a name="l00128"></a>00128   {
<a name="l00129"></a>00129     std::cerr &lt;&lt; <span class="stringliteral">"x/y/z coordinates not found! Cannot convert to sensor_msgs::PointCloud!"</span> &lt;&lt; std::endl;
<a name="l00130"></a>00130     <span class="keywordflow">return</span> (<span class="keyword">false</span>);
<a name="l00131"></a>00131   }
<a name="l00132"></a>00132   <span class="keywordtype">int</span> x_offset = input.fields[x_idx].offset;
<a name="l00133"></a>00133   <span class="keywordtype">int</span> y_offset = input.fields[y_idx].offset;
<a name="l00134"></a>00134   <span class="keywordtype">int</span> z_offset = input.fields[z_idx].offset;
<a name="l00135"></a>00135   uint8_t x_datatype = input.fields[x_idx].datatype;
<a name="l00136"></a>00136   uint8_t y_datatype = input.fields[y_idx].datatype;
<a name="l00137"></a>00137   uint8_t z_datatype = input.fields[z_idx].datatype;
<a name="l00138"></a>00138    
<a name="l00139"></a>00139   <span class="comment">// Convert the fields to channels</span>
<a name="l00140"></a>00140   <span class="keywordtype">int</span> cur_c = 0;
<a name="l00141"></a>00141   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> = 0; <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> &lt; input.fields.size (); ++<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>)
<a name="l00142"></a>00142   {
<a name="l00143"></a>00143     <span class="keywordflow">if</span> ((<span class="keywordtype">int</span>)input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset == x_offset || (int)input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset == y_offset || (<span class="keywordtype">int</span>)input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset == z_offset)
<a name="l00144"></a>00144       <span class="keywordflow">continue</span>;
<a name="l00145"></a>00145     output.channels[cur_c].name = input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].name;
<a name="l00146"></a>00146     output.channels[cur_c].values.resize (output.points.size ());
<a name="l00147"></a>00147     cur_c++;
<a name="l00148"></a>00148   }
<a name="l00149"></a>00149 
<a name="l00150"></a>00150   <span class="comment">// Copy the data points</span>
<a name="l00151"></a>00151   <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> cp = 0; cp &lt; output.points.size (); ++cp)
<a name="l00152"></a>00152   {
<a name="l00153"></a>00153     <span class="comment">// Copy x/y/z</span>
<a name="l00154"></a>00154     output.points[cp].x = sensor_msgs::readPointCloud2BufferValue&lt;float&gt;(&amp;input.data[cp * input.point_step + x_offset], x_datatype);
<a name="l00155"></a>00155     output.points[cp].y = sensor_msgs::readPointCloud2BufferValue&lt;float&gt;(&amp;input.data[cp * input.point_step + y_offset], y_datatype);
<a name="l00156"></a>00156     output.points[cp].z = sensor_msgs::readPointCloud2BufferValue&lt;float&gt;(&amp;input.data[cp * input.point_step + z_offset], z_datatype);
<a name="l00157"></a>00157     <span class="comment">// Copy the rest of the data</span>
<a name="l00158"></a>00158     <span class="keywordtype">int</span> cur_c = 0;
<a name="l00159"></a>00159     <span class="keywordflow">for</span> (<span class="keywordtype">size_t</span> <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> = 0; <a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a> &lt; input.fields.size (); ++<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>)
<a name="l00160"></a>00160     {
<a name="l00161"></a>00161       <span class="keywordflow">if</span> ((<span class="keywordtype">int</span>)input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset == x_offset || (int)input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset == y_offset || (<span class="keywordtype">int</span>)input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset == z_offset)
<a name="l00162"></a>00162         <span class="keywordflow">continue</span>;
<a name="l00163"></a>00163       output.channels[cur_c++].values[cp] = sensor_msgs::readPointCloud2BufferValue&lt;float&gt;(&amp;input.data[cp * input.point_step + input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].offset], input.fields[<a class="codeRef" doxygen="gencpp.tag:../../../api/gencpp/html/" href="http://docs.ros.org/en/jade/api/gencpp/html/namespacesetup.html#acec34584a95c5efe41322be64ce8704d">d</a>].datatype);
<a name="l00164"></a>00164     }
<a name="l00165"></a>00165   }
<a name="l00166"></a>00166   <span class="keywordflow">return</span> (<span class="keyword">true</span>);
<a name="l00167"></a>00167 }
<a name="l00168"></a>00168 }
<a name="l00169"></a>00169 <span class="preprocessor">#endif// SENSOR_MSGS_POINT_CLOUD_CONVERSION_H</span>
</pre></div></div><!-- contents -->

<br clear="all">
<hr size="1"><div style="align: right;">
<a href="http://wiki.ros.org/sensor_msgs">sensor_msgs</a><br>
Author(s): <br>
<small>autogenerated on Wed Jun 14 2017 04:10:20</small>
</div>


</body></html>